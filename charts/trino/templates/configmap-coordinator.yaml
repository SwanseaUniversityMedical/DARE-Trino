apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.coordinator" . }}
  labels:
    app: {{ template "trino.name" . }}
    chart: {{ template "trino.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: coordinator
data:
  node.properties: |
    node.environment={{ .Values.server.node.environment }}
    node.data-dir={{ .Values.server.node.dataDir }}
    plugin.dir={{ .Values.server.node.pluginDir }}
  {{- range $configValue := .Values.additionalNodeProperties }}
    {{ $configValue }}
  {{- end }}

  jvm.config: |
    -server
    -XX:+IgnoreUnrecognizedVMOptions
    -Xmx{{ .Values.coordinator.jvm.maxHeapSize }}
    -XX:+{{ .Values.coordinator.jvm.gcMethod.type }}
    -XX:G1HeapRegionSize={{ .Values.coordinator.jvm.gcMethod.g1.heapRegionSize }}
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -Djdk.attach.allowAttachSelf=true
    -XX:-UseBiasedLocking
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.nio.maxCachedBufferSize=2000000
  {{- range $configValue := .Values.coordinator.additionalJVMConfig }}
    {{ $configValue }}
  {{- end }}

  config.properties: |
    coordinator=true
{{- if gt (int .Values.server.workers) 0 }}
    node-scheduler.include-coordinator=false
{{- else }}
    node-scheduler.include-coordinator=true
{{- end }}
    http-server.http.port={{ .Values.service.port }}
    query.max-memory={{ .Values.server.config.query.maxMemory }}
    query.max-memory-per-node={{ .Values.server.config.query.maxMemoryPerNode }}
    query.client.timeout={{ .Values.server.config.query.clientTimeout }}
    memory.heap-headroom-per-node={{ .Values.server.config.memory.heapHeadroomPerNode }}
    discovery-server.enabled=true
    discovery.uri=http://localhost:{{ .Values.service.port }}
{{- if .Values.server.config.authenticationType }}
    http-server.authentication.type={{ .Values.server.config.authenticationType }}
{{- end }}
  {{- range $configValue := .Values.additionalConfigProperties }}
    {{ $configValue }}
  {{- end }}
  {{- if .Values.server.config.https.enabled }}
    http-server.https.enabled=true
    http-server.https.port={{ .Values.server.config.https.port }}
    http-server.https.keystore.path={{ .Values.server.config.https.keystore.path }}
    http-server.https.keystore.key={{ .Values.server.config.https.keystore.key }}
  {{- end }}
  {{- if .Values.server.config.spillToDisk.enabled }}
    spill-enabled=true
    spiller-spill-path={{ .Values.server.config.spillToDisk.path }} 
  {{- end }}
{{ .Values.server.coordinatorExtraConfig | indent 4 }}

  exchange-manager.properties: |
    exchange-manager.name={{ .Values.server.exchangeManager.name }}
    exchange.base-directory={{ .Values.server.exchangeManager.baseDir }}
  {{- range $configValue := .Values.additionalExchangeManagerProperties }}
    {{ $configValue }}
  {{- end }}

  log.properties: |
    io.trino={{ .Values.server.log.trino.level }}
  {{- range $configValue := .Values.additionalLogProperties }}
    {{ $configValue }}
  {{- end }}

{{- if contains "PASSWORD" .Values.server.config.authenticationType }}
  password-authenticator.properties: |
  {{- range $configName, $configValue := .Values.server.config.passwordAuthenticationProperties }}
    {{ $configName }}={{ $configValue }}
  {{- end }}
{{- end }}

{{ if and .Values.eventListenerProperties .Values.server.log.trino.querylogging.enabled }}
  event-listener.properties: |
  {{- range $configName, $configValue := .Values.eventListenerProperties }}
    {{ $configName }}={{ $configValue }}
  {{- end }}
{{- end }}

{{ if .Values.server.log.trino.querylogging.enabled }}
  querylog-log4j2.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="warn" name="TrinoQueryLog" packages="">
        <Appenders>
            <RollingFile name="JsonRollingFile">
                <FileName>{{ .Values.server.node.logDir }}/{{ .Values.server.log.trino.querylogging.fileName }}</FileName>
                <FilePattern>{{ .Values.server.log.trino.querylogging.pattern }}</FilePattern>
                <JsonLayout charset="UTF-8" includeStacktrace="false"
                            compact="true" eventEol="true" objectMessageAsJsonObject="true"/>
                <Policies>
                    {{ .Values.server.log.trino.querylogging.logPolicy }}
                </Policies>
                <DefaultRolloverStrategy max="10"/>
            </RollingFile>
        </Appenders>

        <Loggers>
            <Root level="{{ .Values.server.log.trino.level }}">
                <AppenderRef ref="JsonRollingFile"/>
            </Root>
        </Loggers>
    </Configuration>
{{- end }}

{{ if .Values.server.config.accessControl.enabled }}
  access-control.properties: |
  {{- range $configName, $configValue := .Values.server.config.accessControl.properties }}
    {{ $configName }}={{ $configValue }}
  {{- end }}
{{- end }}
